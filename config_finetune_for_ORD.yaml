batch_size: 32                  # batch size
epochs: 500                    # total number of epochs
eval_every_n_epochs: 1          # validation frequency
fine_tune_from: untrained_gin  # sub directory of pre-trained model in ./ckpt or untrained_gin/gcn
log_every_n_steps: 50           # print training log frequency
fp16_precision: False           # float precision 16 (i.e. True/False)
init_lr: 0.0005                 # initial learning rate for the prediction head
init_base_lr: 0.0001            # initial learning rate for the base GNN encoder
weight_decay: 1e-6              # weight decay of Adam
gpu: cuda:0                     # training GPU
pick_h: True                   # picking h True/False If you need calculation with other model -> True
output: False                   # h output True/False
check_model: RFR                 # other model selection: RFC/LR/RFR/NONE
task_name: PC_rgr                  # name of fine-tuning benchmark, inlcuding
                                # classifications: BBBP/BACE/ClinTox/Tox21/HIV/SIDER/MUV/ORD/PC
                                # regressions: FreeSolv/ESOL/Lipo/qm7/qm8/qm9/ORD_rgr/PC_rgr
ORD_train: True                 # use ORD data as train
CV: False                      # Cross validation True/False
n_splits: 2                    # numbaer of split in K-forld
rxn_type:                       # for only PC/PC_rgr, you can select PC_rxn_type (list)
 - CN                           #CN/CO_90/CO_450/CO_bp
# - CO_90
# - CO_450
# - CO_dp
model_type: gin                 # GNN backbone (i.e., gin/gcn)
model: 
  num_layer: 5                  # number of graph conv layers
  emb_dim: 300                  # embedding dimension in graph conv layers
  feat_dim: 512                 # output feature dimention
  drop_ratio: 0.3               # dropout ratio
  pool: mean                    # readout pooling (i.e., mean/max/add)

dataset:
  num_workers: 18                # dataloader number of workers
  valid_size: 0.1               # ratio of validation data
  test_size: 0.1                # ratio of test data
  splitting: random          # data splitting (i.e., random/scaffold)
